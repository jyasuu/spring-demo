server.port=9090
server.address=127.0.0.1

name=demo

spring.devtools.restart.log-condition-evaluation-delta=false
management.endpoint.shutdown.enabled=true
#management.endpoints.enabled-by-default=false
management.endpoint.info.enabled=true
management.endpoints.jmx.exposure.include=health,info
#management.endpoints.web.exposure.exclude=env,beans
management.endpoints.web.exposure.include=*
management.endpoint.beans.cache.time-to-live=10s
management.endpoints.web.discovery.enabled=false
management.endpoints.web.cors.allowed-origins=https://example.com
management.endpoints.web.cors.allowed-methods=GET,POST
management.endpoint.health.status.order=fatal,down,out-of-service,unknown,up
management.endpoint.health.status.http-mapping.down=503
management.endpoint.health.status.http-mapping.fatal=503
management.endpoint.health.status.http-mapping.out-of-service=503
#management.endpoint.health.group.custom.include=db
#management.endpoint.health.group.custom.exclude=db
#management.endpoint.health.group.custom.show-details=when-authorized
#management.endpoint.health.group.custom.roles=admin
#management.endpoint.health.group.custom.status.order=fatal,up
#management.endpoint.health.group.custom.status.http-mapping.fatal=500
#management.endpoint.health.group.custom.status.http-mapping.out-of-service=500
#management.endpoint.health.group.readiness.include=readinessState,customCheck
info.app.encoding=UTF-8
info.app.java.source=17
info.app.java.target=17
management.info.git.mode=full
management.info.git.enabled=true
server.shutdown=graceful

spring.devtools.restart.trigger-file=.reloadtrigger
spring.devtools.restart.poll-interval=2s
spring.devtools.restart.quiet-period=1s
spring.main.lazy-initialization=true


spring.jpa.generate-ddl=true



#server.tomcat.remoteip.remote-ip-header=x-forwarded-for
#server.tomcat.remoteip.protocol-header=x-forwarded-proto

#logging.level.root=warn
#logging.level.org.springframework.web=debug
#logging.level.org.hibernate=error
#logging.group.tomcat=org.apache.catalina,org.apache.coyote,org.apache.tomcat
#logging.level.tomcat=trace
#logging.register-shutdown-hook=false

#spring.application.name=MyApp


#spring.devtools.restart.exclude=static/**,public/**
#restart.exclude.companycommonlibs=/mycorp-common-[\\w\\d-\\.]+\\.jar
#restart.include.projectcommon=/mycorp-myproj-[\\w\\d-\\.]+\\.jar

#spring.messages.basename=messages,config.i18n.messages
#spring.messages.fallback-to-system-locale=false
#spring.task.execution.pool.max-size=16
#spring.task.execution.pool.queue-capacity=100
#spring.task.execution.pool.keep-alive=10s
#spring.task.scheduling.thread-name-prefix=scheduling-
#spring.task.scheduling.pool.size=2
#server.servlet.session.cookie.same-site=none
#spring.lifecycle.timeout-per-shutdown-phase=20s
#spring.security.oauth2.client.registration.my-login-client.client-id=abcd
#spring.security.oauth2.client.registration.my-login-client.client-secret=password
#spring.security.oauth2.client.registration.my-login-client.client-name=Client for OpenID Connect
#spring.security.oauth2.client.registration.my-login-client.provider=my-oauth-provider
#spring.security.oauth2.client.registration.my-login-client.scope=openid,profile,email,phone,address
#spring.security.oauth2.client.registration.my-login-client.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.my-login-client.client-authentication-method=client_secret_basic
#spring.security.oauth2.client.registration.my-login-client.authorization-grant-type=authorization_code
#
#spring.security.oauth2.client.registration.my-client-1.client-id=abcd
#spring.security.oauth2.client.registration.my-client-1.client-secret=password
#spring.security.oauth2.client.registration.my-client-1.client-name=Client for user scope
#spring.security.oauth2.client.registration.my-client-1.provider=my-oauth-provider
#spring.security.oauth2.client.registration.my-client-1.scope=user
#spring.security.oauth2.client.registration.my-client-1.redirect-uri={baseUrl}/authorized/user
#spring.security.oauth2.client.registration.my-client-1.client-authentication-method=client_secret_basic
#spring.security.oauth2.client.registration.my-client-1.authorization-grant-type=authorization_code
#
#spring.security.oauth2.client.registration.my-client-2.client-id=abcd
#spring.security.oauth2.client.registration.my-client-2.client-secret=password
#spring.security.oauth2.client.registration.my-client-2.client-name=Client for email scope
#spring.security.oauth2.client.registration.my-client-2.provider=my-oauth-provider
#spring.security.oauth2.client.registration.my-client-2.scope=email
#spring.security.oauth2.client.registration.my-client-2.redirect-uri={baseUrl}/authorized/email
#spring.security.oauth2.client.registration.my-client-2.client-authentication-method=client_secret_basic
#spring.security.oauth2.client.registration.my-client-2.authorization-grant-type=authorization_code
#
#spring.security.oauth2.client.provider.my-oauth-provider.authorization-uri=https://my-auth-server.com/oauth2/authorize
#spring.security.oauth2.client.provider.my-oauth-provider.token-uri=https://my-auth-server.com/oauth2/token
#spring.security.oauth2.client.provider.my-oauth-provider.user-info-uri=https://my-auth-server.com/userinfo
#spring.security.oauth2.client.provider.my-oauth-provider.user-info-authentication-method=header
#spring.security.oauth2.client.provider.my-oauth-provider.jwk-set-uri=https://my-auth-server.com/oauth2/jwks
#spring.security.oauth2.client.provider.my-oauth-provider.user-name-attribute=name
#spring.security.oauth2.client.provider.oidc-provider.issuer-uri=https://dev-123456.oktapreview.com/oauth2/default/
#spring.security.oauth2.client.registration.my-client.client-id=abcd
#spring.security.oauth2.client.registration.my-client.client-secret=password
#spring.security.oauth2.client.registration.my-client.provider=google
#spring.security.oauth2.client.registration.google.client-id=abcd
#spring.security.oauth2.client.registration.google.client-secret=password
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://example.com/oauth2/default/v1/keys
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-123456.oktapreview.com/oauth2/default/
#spring.security.oauth2.resourceserver.jwt.audiences[0]=my-audience
#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=https://example.com/check-token
#spring.security.oauth2.resourceserver.opaquetoken.client-id=my-client-id
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=my-client-secret
#spring.security.oauth2.authorizationserver.client.my-client-1.registration.client-id=abcd
#spring.security.oauth2.authorizationserver.client.my-client-1.registration.client-secret={noop}secret1
#spring.security.oauth2.authorizationserver.client.my-client-1.registration.client-authentication-methods[0]=client_secret_basic
#spring.security.oauth2.authorizationserver.client.my-client-1.registration.authorization-grant-types[0]=authorization_code
#spring.security.oauth2.authorizationserver.client.my-client-1.registration.authorization-grant-types[1]=refresh_token
#spring.security.oauth2.authorizationserver.client.my-client-1.registration.redirect-uris[0]=https://my-client-1.com/login/oauth2/code/abcd
#spring.security.oauth2.authorizationserver.client.my-client-1.registration.redirect-uris[1]=https://my-client-1.com/authorized
#spring.security.oauth2.authorizationserver.client.my-client-1.registration.scopes[0]=openid
#spring.security.oauth2.authorizationserver.client.my-client-1.registration.scopes[1]=profile
#spring.security.oauth2.authorizationserver.client.my-client-1.registration.scopes[2]=email
#spring.security.oauth2.authorizationserver.client.my-client-1.registration.scopes[3]=phone
#spring.security.oauth2.authorizationserver.client.my-client-1.registration.scopes[4]=address
#spring.security.oauth2.authorizationserver.client.my-client-1.require-authorization-consent=true
#spring.security.oauth2.authorizationserver.client.my-client-2.registration.client-id=efgh
#spring.security.oauth2.authorizationserver.client.my-client-2.registration.client-secret={noop}secret2
#spring.security.oauth2.authorizationserver.client.my-client-2.registration.client-authentication-methods[0]=client_secret_jwt
#spring.security.oauth2.authorizationserver.client.my-client-2.registration.authorization-grant-types[0]=client_credentials
#spring.security.oauth2.authorizationserver.client.my-client-2.registration.scopes[0]=user.read
#spring.security.oauth2.authorizationserver.client.my-client-2.registration.scopes[1]=user.write
#spring.security.oauth2.authorizationserver.client.my-client-2.jwk-set-uri=https://my-client-2.com/jwks
#spring.security.oauth2.authorizationserver.client.my-client-2.token-endpoint-authentication-signing-algorithm=RS256
#spring.session.jdbc.table-name=SESSIONS
#spring.graphql.cors.allowed-origins=https://example.org
#spring.graphql.cors.allowed-methods=GET,POST
#spring.graphql.cors.max-age=1800s
#spring.datasource.url=jdbc:mysql://localhost/test
#spring.datasource.username=dbuser
#spring.datasource.password=dbpass
#spring.datasource.tomcat.max-wait=10000
#spring.datasource.tomcat.max-active=50
#spring.datasource.tomcat.test-on-borrow=true
#spring.datasource.jndi-name=java:jboss/datasources/customers
#spring.jdbc.template.max-rows=500
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.r2dbc.url=r2dbc:postgresql://localhost/test
#spring.r2dbc.username=dbuser
#spring.r2dbc.password=dbpass
#spring.data.redis.host=localhost
#spring.data.redis.port=6379
#spring.data.redis.database=0
#spring.data.redis.username=user
#spring.data.redis.password=secret
#spring.data.redis.ssl.enabled=true
#spring.data.redis.ssl.bundle=example
#spring.data.mongodb.uri=mongodb://user:secret@mongoserver1.example.com:27017,mongoserver2.example.com:23456/test
#spring.data.mongodb.host=mongoserver1.example.com
#spring.data.mongodb.port=27017
#spring.data.mongodb.additional-hosts[0]=mongoserver2.example.com:23456
#spring.data.mongodb.database=test
#spring.data.mongodb.username=user
#spring.data.mongodb.password=secret
#spring.data.mongodb.uri=mongodb://user:secret@mongoserver1.example.com:27017,mongoserver2.example.com:23456/test
#spring.data.mongodb.ssl.enabled=true
#spring.data.mongodb.uri=mongodb://user:secret@mongoserver1.example.com:27017,mongoserver2.example.com:23456/test
#spring.data.mongodb.ssl.bundle=example
## Only necessary if more than one provider is present
#spring.cache.jcache.provider=com.example.MyCachingProvider
#spring.cache.cache-names=cache1,cache2
#spring.quartz.job-store-type=jdbc
#spring.quartz.jdbc.initialize-schema=always